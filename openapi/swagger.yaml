openapi: 3.0.4
info:
  title: Insurance Application API
  version: 1.0.0
  description: API specification for MVP insurance quote & application system.

servers:
  - url: 'http:///xxxxxxxxx/api/v1'

tags:
  - name: user
    description: Operations about user
  - name: insurance
    description: Everything about insurance
  - name: Notifications
    description: notification service

paths:

  # ユーザ登録API
  /users/register:
    post:
      tags:
        - user
      summary: ユーザー登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: ユーザー登録成功
        '400':
          description: 入力エラー

  # token検証API
  /auth/token:
    post:
      tags:
        - user
      summary: ログイン（認証はMVPでは仮）
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
      responses:
        '200':
          description: ログイン成功（仮トークン返却）
        '401':
          description: 認証失敗

  # 個人設定の内容取得および修正API
  /users/setting/{user_id}:
    put:
      tags:
        - user
      summary: 個人設定の取得
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 設定取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/userSettings'
        '400':
          description: 入力エラー
    patch:
      tags:
        - user
      summary: 個人設定の取得
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 設定取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/userSettings'
        '400':
          description: 入力エラー

  # 保険商品の一覧取得API
  /plans:
    get:
      tags:
        - insurance
      summary: 保険商品一覧の取得
      responses:
        '200':
          description: 商品一覧取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'

  # 保険商品の詳細情報取得API
  /plans/{plan_id}:
    get:
      tags:
        - insurance
      summary: 保険商品の詳細取得
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 商品詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'

  # 見積もり申し込みAPI
  /quotes:
    post:
      tags:
        - insurance
      summary: 見積もり作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteInput'
      responses:
        '201':
          description: 見積もり作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'

  # 過去の見積もり一覧取得API
  /quotes/{user_id}:
    get:
      tags:
        - insurance
      summary: 見積もり履歴一覧取得
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 見積もり履歴
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quote'

  # 見積もりAPI
  /quotes/{quotes_id}:
    get:
      tags:
        - insurance
      summary: 特定の見積もり取得
      parameters:
        - name: quotes_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 見積もり履歴
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quote'
    delete:
      tags:
        - insurance
      summary: 見積もり削除
      parameters:
        - name: quotes_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 削除完了
        '400':
          description: 入力エラー
        '401':
          description: 認証失敗


  # 保険の申し込みAPI
  /application:
    post:
      tags:
        - insurance
      summary: 保険申込の登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationInput'
      responses:
        '201':
          description: 申込登録成功

  # 既契約一覧取得API
  /applications/{user_id}:
    get:
      tags:
        - insurance
      summary: 申込履歴取得
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 申込履歴一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InsuranceContractList'
        '400':
          description: 入力エラー
        '401':
          description: 認証失敗

  #契約内容詳細取得API
  /applications/{contract_id}:
    get:
      tags:
        - insurance
      summary: 申込履歴取得
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 申込履歴一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InsuranceContract'
        '400':
          description: 入力エラー
        '401':
          description: 認証失敗
    delete:
      tags:
        - insurance
      summary: 契約解除
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 削除完了
        '400':
          description: 入力エラー
        '401':
          description: 認証失敗

  # お知らせ一覧取得API
  /notifications:
    get:
      summary: お知らせ一覧を取得する
      tags:
        - Notifications
      parameters:
        - name: limit
          in: query
          description: 取得する通知の上限数
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: 取得開始位置（ページネーション用）
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: お知らせ一覧の取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationList'

  # お知らせ詳細取得API
  /notifications/{message_id}:
    get:
      summary: 指定した通知の詳細を取得する
      tags:
        - Notifications
      parameters:
        - name: message_id
          in: path
          description: 取得対象の通知ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 通知詳細の取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '404':
          description: 指定した通知IDが見つからない

components:
  schemas:

    UserRegister:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
      required: [email, password, name]

    Token:
      type: object
      properties:
        authtoken:
          type: string
      required: [authtoken]

    userSettings:
      type: object
      properties:
        setting1:
          type: string
        setting2:
          type: string
      required: [setting1, setting2]

    Plan:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        monthly_premium:
          type: integer

    QuoteInput:
      type: object
      properties:
        user_id:
          type: string
        plan_id:
          type: string
        age:
          type: integer
        coverage:
          type: integer
      required: [user_id, plan_id, age, coverage]

    Quote:
      allOf:
        - $ref: '#/components/schemas/QuoteInput'
        - type: object
          properties:
            estimated_premium:
              type: integer

    ApplicationInput:
      type: object
      properties:
        user_id:
          type: string
        quote_id:
          type: string
        agreement:
          type: boolean
      required: [user_id, quote_id, agreement]

    InsuranceContractList:
      type: array
      items:
        type: string

    InsuranceContract:
      type: object
      properties:
        contract_id:
          type: string
          example: "abc123"
        user_id:
          type: string
          example: "user001"
        product_name:
          type: string
          example: "個人年金保険プランA"
        start_date:
          type: string
          format: date
          example: "2023-04-01"
        end_date:
          type: string
          format: date
          example: "2043-03-31"
        status:
          type: string
          example: "active"
        premium:
          type: number
          format: double
          example: 12000.5
          
    NotificationList:
      type: object
      properties:
        message_id:
          type: string
        title:
          type: string
        date:
          type: string
          format: date-time
          example: "2025-06-01T10:00:00Z"
        read:
          type: boolean
          example: false


    Notification:
      type: object
      properties:
        message_id:
          type: string
          example: "msg001"
        title:
          type: string
          example: "保険更新のお知らせ"
        content:
          type: string
          example: "来月で保険契約の更新時期となります。"
        date:
          type: string
          format: date-time
          example: "2025-06-01T10:00:00Z"
        read:
          type: boolean
          example: false