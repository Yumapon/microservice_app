openapi: 3.0.1
info:
  title: 保険アプリ API
  description: このAPIは保険アプリにおけるユーザー認証、見積もり、申込、契約確認などの機能を提供します。
  version: 1.0.0
servers:
- url: https://api.example.com

tags:
- name: PublicPlans
  description: 公開保険商品API
- name: Auth
  description: セッションベースの認証処理
- name: BFF
  description: api合成処理
- name: BFF Proxy
  description: Proxy API 
- name: Quotation
  description: 保険見積もり関連API
- name: Application
  description: 保険申込関連API
- name: Contract
  description: 保険契約関連API
- name: Notification
  description: ユーザー通知関連API

paths:
  /api/v1/public/plans:
    get:
      tags:
        - PublicPlans
      summary: 保険商品一覧を取得
      description: 認証不要で取得できる保険商品の一覧を返します。
      operationId: getPublicPlans
      responses:
        '200':
          description: 保険商品一覧の取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'
              example:
                value:
                  - plan_id: "pension001"
                    name: "個人年金保険"
                    description: "老後の生活資金を確保するための保険です。"
                    image_key: "pension001.jpg"
                  - plan_id: "education001"
                    name: "学資保険"
                    description: "お子様の教育資金を準備するための保険です。"
                    image_key: "education001.jpg"
        '500':
          description: サーバーエラー

  /api/v1/bff/public/homepage-info:
    get:
      tags: [BFF]
      summary: 非ログインユーザー向けホーム情報
      description: 保険紹介一覧やキャンペーン情報など、ホーム画面に必要な情報を返します。
      operationId: getHomepageInfo
      responses:
        '200':
          description: ホーム情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomepageInfoResponseModel'

  /api/v1/auth/login:
    get:
      tags:
        - Auth
      summary: ログイン処理（Keycloakへリダイレクト）
      description: 未ログイン状態の場合、Keycloakのログイン画面へリダイレクトします。すでにログイン済みの場合はJSONで応答。
      parameters:
        - name: remember_me
          in: query
          description: ログイン状態を保持するかどうか
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: すでにログイン済み
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 既にログイン済み
                  user:
                    type: object
                    example:
                      sub: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                      name: "山田 太郎"
                      email: "taro@example.com"
        "307":
          description: Keycloakログイン画面へリダイレクト
          headers:
            Location:
              description: リダイレクト先のURL
              schema:
                type: string

  /api/v1/auth/callback:
    get:
      tags:
        - Auth
      summary: 認証コードのコールバック処理
      description: Keycloakからの認可コードを受け取り、セッションを作成し `/api/v1/top` にリダイレクトします。
      parameters:
        - name: code
          in: query
          required: true
          description: Keycloakから送られる認可コード
          schema:
            type: string
        - name: state
          in: query
          required: false
          description: Base64エンコードされたstate情報（remember_me含む）
          schema:
            type: string
      responses:
        "307":
          description: ログイン後、アプリケーションTOPへリダイレクト
          headers:
            Location:
              description: リダイレクト先URL（例：/api/v1/top）
              schema:
                type: string

  /api/v1/auth/logout:
    post:
      tags:
        - Auth
      summary: ログアウト処理
      description: セッションとトークンを破棄し、ログアウト完了メッセージを返却します。
      responses:
        "200":
          description: ログアウト成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ログアウト完了

  /api/v1/bff/my/dashboard:
    get:
      tags: 
        - BFF
      summary: ログインユーザーダッシュボード情報一括取得
      description: 見積一覧、申込一覧、契約一覧、未読通知件数をまとめて返します。
      operationId: getMyDashboard
      security:
        - bearerAuth: []
      responses:
        '200':
          description: ダッシュボード情報取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  quotes:
                    type: array
                    items:
                      $ref: '#/components/schemas/PensionQuoteResponseModel'
                  applications:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApplicationResponseModel'
                  contracts:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContractResponseModel'
                  unread_notifications:
                    type: integer

  /api/v1/bff/my/quotes-summary:
    get:
      tags: [BFF]
      summary: 見積もりサマリー取得
      description: ログインユーザーの見積件数や状態を簡易集計して返します。
      operationId: getMyQuoteSummary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: サマリー取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteSummaryResponseModel'

  /api/v1/bff/my/contracts-summary:
    get:
      tags: [BFF]
      summary: 契約サマリー取得
      description: ログインユーザーの契約件数（active / expired / cancelled）を返します。
      operationId: getMyContractSummary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: サマリー取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractSummaryResponseModel'

  /api/v1/bff/my/quotes-with-application:
    get:
      tags:
        - BFF
      summary: 見積もりと申込情報の結合データ取得
      description: ログインユーザーの見積もりに対応する申込情報を統合して返却します。
      operationId: getMyQuotesWithApplication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 見積もり＋申込の統合リストを返却
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteWithApplicationModel'
        '401':
          description: 認証失敗（アクセストークン無効）

  /api/v1/bff/quotes/pension:
    post:
      tags:
        - BFF Proxy
      summary: 見積もり作成（Proxy）
      description: quotation_serviceのPOST /quotes/pensionをBFF経由で呼び出す。
      operationId: proxyCreatePensionQuote
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PensionQuoteRequestModel'
      responses:
        '200':
          description: 見積もり作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PensionQuoteResponseModel'
        '400':
          description: リクエスト不正
        '401':
          description: 認証失敗
        '500':
          description: 内部エラー

  /api/v1/bff/my/quotes:
    get:
      tags:
        - BFF Proxy
      summary: 見積もり一覧取得（Proxy）
      description: quotation_serviceのGET /my/quotesをBFF経由で呼び出す。
      operationId: proxyGetMyQuotes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 見積もり一覧取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PensionQuoteResponseModel'
        '401':
          description: 認証失敗
        '500':
          description: 内部エラー

  /api/v1/bff/my/quotes/{quote_id}:
    get:
      tags:
        - BFF Proxy
      summary: 個別見積取得（Proxy）
      description: quotation_serviceのGET /my/quotes/{quote_id}をBFF経由で呼び出す。
      operationId: proxyGetMyQuoteById
      security:
        - bearerAuth: []
      parameters:
        - name: quote_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 見積もり取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PensionQuoteResponseModel'
        '401':
          description: 認証失敗
        '404':
          description: 対象見積もりが存在しない
        '500':
          description: 内部エラー

    patch:
      tags:
        - BFF Proxy
      summary: 見積もり条件の部分更新（Proxy）
      description: quotation_serviceのPATCH /my/quotes/{quote_id}をBFF経由で呼び出す。
      operationId: proxyPatchMyQuote
      security:
        - bearerAuth: []
      parameters:
        - name: quote_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialQuoteUpdateModel'
      responses:
        '200':
          description: 見積もり更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PensionQuoteResponseModel'
        '400':
          description: 不正なリクエストまたはステータス
        '401':
          description: 認証失敗
        '500':
          description: 内部エラー

    delete:
      tags:
        - BFF Proxy
      summary: 見積もりキャンセル（Proxy）
      description: quotation_serviceのDELETE /my/quotes/{quote_id}をBFF経由で呼び出す。
      operationId: proxyCancelMyQuote
      security:
        - bearerAuth: []
      parameters:
        - name: quote_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: キャンセル成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteStateUpdateModel'
        '400':
          description: 不正な操作
        '401':
          description: 認証失敗
        '500':
          description: 内部エラー

  /api/v1/bff/my/quotes/{quote_id}/changestate:
    put:
      tags:
        - BFF Proxy
      summary: 見積もりステータス更新（Proxy）
      description: quotation_serviceのPUT /my/quotes/{quote_id}/changestateをBFF経由で呼び出す。
      operationId: proxyChangeMyQuoteState
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteStateUpdateRequest'
      parameters:
        - name: quote_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ステータス変更成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteStateUpdateModel'
        '400':
          description: 不正な状態遷移
        '401':
          description: 認証失敗
        '500':
          description: 内部エラー

  /api/v1/bff/applications/pension:
    post:
      tags:
        - BFF Proxy
      summary: 保険申込作成（Proxy）
      description: application_serviceのPOST /applicationsをBFF経由で呼び出す。
      operationId: proxyCreateApplication
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequestModel'
      responses:
        '200':
          description: 申込作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModel'
        '400':
          description: 整合性チェック失敗など
        '401':
          description: 認証失敗
        '500':
          description: 内部エラー

  /api/v1/bff/my/applications:
    get:
      tags:
        - BFF Proxy
      summary: 申込一覧取得（Proxy）
      description: application_serviceのGET /my/applicationsをBFF経由で呼び出す。
      operationId: proxyGetMyApplications
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 申込一覧取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationResponseModel'
        '401':
          description: 認証失敗
        '500':
          description: 内部エラー

  /api/v1/bff/my/applications/{application_id}:
    get:
      tags:
        - BFF Proxy
      summary: 個別申込取得（Proxy）
      description: application_serviceのGET /my/applications/{application_id}をBFF経由で呼び出す。
      operationId: proxyGetMyApplicationById
      security:
        - bearerAuth: []
      parameters:
        - name: application_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 申込取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModel'
        '401':
          description: 認証失敗
        '404':
          description: 該当申込が存在しない
        '500':
          description: 内部エラー

    patch:
      tags:
        - BFF Proxy
      summary: 申込情報の部分更新（Proxy）
      description: application_serviceのPATCH /my/applications/{application_id}をBFF経由で呼び出す。
      operationId: proxyPatchMyApplication
      security:
        - bearerAuth: []
      parameters:
        - name: application_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialApplicationUpdateModel'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModel'
        '400':
          description: 不正な操作
        '401':
          description: 認証失敗
        '500':
          description: 内部エラー

    delete:
      tags:
        - BFF Proxy
      summary: 申込キャンセル（Proxy）
      description: application_serviceのDELETE /my/applications/{application_id}をBFF経由で呼び出す。
      operationId: proxyDeleteMyApplication
      security:
        - bearerAuth: []
      parameters:
        - name: application_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: キャンセル成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationStatusResponseModel'
        '400':
          description: 不正な状態
        '401':
          description: 認証失敗
        '500':
          description: 内部エラー

  /api/v1/bff/my/applications/{application_id}/changestate:
    put:
      tags:
        - BFF Proxy
      summary: 申込ステータス変更（Proxy）
      description: application_serviceのPUT /my/applications/{application_id}/changestateをBFF経由で呼び出す。
      operationId: proxyChangeApplicationStatus
      security:
        - bearerAuth: []
      parameters:
        - name: application_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationStateUpdateRequest'
      responses:
        '200':
          description: ステータス変更成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationStateUpdateResponse'
        '400':
          description: 不正な状態遷移
        '401':
          description: 認証失敗
        '500':
          description: 内部エラー

  /api/v1/quotes/pension:
    post:
      tags:
        - Quotation
      summary: 個人年金保険の見積もり作成
      description: ユーザーが指定した条件に基づき、MongoDBとPostgreSQLに保存し、見積もりを新規作成します。
      operationId: createPensionQuote
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PensionQuoteRequestModel"
            example:
              birth_date: "1990-01-01"
              gender: "male"
              monthly_premium: 20000
              payment_period_years: 20
              pension_payment_years: 10
              tax_deduction_enabled: true
      responses:
        "200":
          description: 見積もり作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PensionQuoteResponseModel"
        "401":
          description: 認証エラー

  /api/v1/my/quotes:
    get:
      tags:
        - Quotation
      summary: ログインユーザーの見積もり一覧取得
      description: PostgreSQLとMongoDBを統合して、ログイン中のユーザーが作成した全見積もりを返します。
      operationId: getMyQuotes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 見積もりデータの配列
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PensionQuoteResponseModel'
        '401':
          description: 認証失敗

  /api/v1/my/quotes/{quote_id}:
    get:
      tags:
        - Quotation
      summary: ログインユーザーの個別見積もり取得
      description: MongoDBのシナリオ情報も含めた、指定見積もりIDに対応する完全データを返します。
      operationId: getMyQuoteById
      security:
        - bearerAuth: []
      parameters:
        - name: quote_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 見積もりデータの返却
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PensionQuoteResponseModel'
        '404':
          description: 見積もりが存在しない

    patch:
      tags:
        - Quotation
      summary: ログインユーザーの見積もり情報を部分更新
      description: confirmed状態の見積もりに対し、条件を一部変更し再見積もり・再保存を行います。
      operationId: patchMyQuote
      security:
        - bearerAuth: []
      parameters:
        - name: quote_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialQuoteUpdateModel'
      responses:
        '200':
          description: 更新後の見積もりデータ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PensionQuoteResponseModel'
        '400':
          description: 更新不可（条件不備・不正なステータス）

    delete:
      tags:
        - Quotation
      summary: ログインユーザーの見積もり削除（cancelledへ）
      description: confirmed/applied状態の見積もりをcancelledへステータス変更します。
      operationId: cancelMyQuote
      security:
        - bearerAuth: []
      parameters:
        - name: quote_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ステータス変更結果
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteStateUpdateModel'

  /api/v1/my/quotes/{quote_id}/changestate:
    put:
      tags:
        - Quotation
      summary: ログインユーザーの見積もりステータス変更
      description: 状態遷移ルールに基づいて、ステータス（例 confirmed→appliedなど）を変更します。
      operationId: changeMyQuoteState
      security:
        - bearerAuth: []
      parameters:
        - name: quote_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteStateUpdateRequest'
      responses:
        '200':
          description: ステータス更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteStateUpdateModel'
        '400':
          description: 不正な状態遷移
        '404':
          description: 対象見積もりが存在しない

  /api/v1/applications:
    post:
      tags:
        - Application
      summary: 保険契約申込の作成
      description: 指定された見積もり情報を基に、保険申込を新規作成します（利率の整合性チェックを含む）。
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequestModel'
            example:
              quote:
                quote_id: "123e4567-e89b-12d3-a456-426614174000"
                user_id: "user-001"
                birth_date: "1990-01-01"
                gender: "male"
                monthly_premium: 20000
                payment_period_years: 30
                tax_deduction_enabled: true
                contract_date: "2025-07-01"
                contract_interest_rate: 1.2
                total_paid_amount: 7200000
                pension_start_age: 60
                annual_tax_deduction: 40000
                scenario_data:
                  - scenario_name: "標準"
                    assumed_interest_rate: 1.2
                    total_refund_amount: 9108000
                    annual_annuity: 910800
                    lump_sum_amount: 9108000
                    refund_on_15_years: 4554000
                    refund_rate_on_15_years: 101.2
      responses:
        '200':
          description: 申込作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModel'
        '400':
          description: 整合性チェック失敗などによる申込エラー
        '401':
          description: 認証失敗（アクセストークン無効）

  /api/v1/my/applications:
    get:
      tags:
        - Application
      summary: ログインユーザーの申込一覧取得
      description: ログインユーザーに紐づく保険申込情報の一覧を取得します。
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 申込一覧の取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationResponseModel'
        '401':
          description: 認証失敗（アクセストークン無効）

  /api/v1/my/applications/{application_id}:
    get:
      tags:
        - Application
      summary: 特定申込情報の取得
      description: ログインユーザーが作成した指定申込IDに該当する保険申込の詳細情報を取得します。
      security:
        - bearerAuth: []
      parameters:
        - name: application_id
          in: path
          required: true
          description: 申込ID（UUID）
          schema:
            type: string
      responses:
        '200':
          description: 指定申込の取得に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModel'
        '401':
          description: 認証失敗
        '403':
          description: 他人の申込にアクセスしようとした場合
        '404':
          description: 該当申込が存在しない
    patch:
      tags:
        - Application
      summary: ログインユーザーの申込情報を部分更新
      description: 申込ステータスが `pending` の場合のみ、内容を部分的に更新可能です。
      security:
        - bearerAuth: []
      parameters:
        - name: application_id
          in: path
          required: true
          description: 申込ID（UUID）
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialApplicationUpdateModel'
      responses:
        '200':
          description: 更新後の申込情報
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModel'
        '400':
          description: 更新不可（不正な状態や入力）
        '401':
          description: 認証失敗
        '403':
          description: 他人の申込に対する更新要求
        '404':
          description: 該当申込が存在しない
    delete:
      tags:
        - Application
      summary: ログインユーザーの申込を削除
      description: 指定された申込を削除します（ステータス更新またはフラグ付けによる論理削除を想定）。
      security:
        - bearerAuth: []
      parameters:
        - name: application_id
          in: path
          required: true
          description: 対象申込ID（UUID）
          schema:
            type: string
      responses:
        '200':
          description: 削除またはステータス変更成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationStatusResponseModel'
        '400':
          description: 不正な状態、または削除不可
        '404':
          description: 該当申込が存在しない

  /api/v1/my/applications/{application_id}/changestate:
    put:
      tags:
        - Application
      summary: 保険申込のステータス変更
      description: 指定された申込IDに対して、状態遷移ルールに基づきステータスを更新します。
      security:
        - bearerAuth: []
      parameters:
        - name: application_id
          in: path
          required: true
          description: ステータス変更対象の申込ID（UUID）
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationStateUpdateRequest'
      responses:
        '200':
          description: ステータス変更成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationStateUpdateResponse'
        '400':
          description: 不正な状態遷移またはステータス変更失敗
        '404':
          description: 対象申込が存在しない

  /api/v1/my/contracts:
    get:
      tags:
        - Contract
      summary: 契約一覧取得
      description: 自分の保険契約一覧を取得します。
      security:
        - bearerAuth: []
      operationId: getMyContracts
      responses:
        '200':
          description: 契約一覧取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractResponseModel'

  /api/v1/my/contracts/{contract_id}:
    get:
      tags:
        - Contract
      summary: 契約詳細取得
      description: 指定IDの保険契約情報を取得します。
      security:
        - bearerAuth: []
      operationId: getMyContractById
      parameters:
        - name: contract_id
          in: path
          required: true
          description: 契約ID
          schema:
            type: string
      responses:
        '200':
          description: 契約詳細取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResponseModel'

    put:
      tags:
        - Contract
      summary: 契約情報の更新
      description: 指定IDの保険契約を更新します。
      security:
        - bearerAuth: []
      operationId: updateMyContract
      parameters:
        - name: contract_id
          in: path
          required: true
          description: 更新対象の契約ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractUpdateModel'
      responses:
        '200':
          description: 契約更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResponseModel'

  /api/v1/my/contracts/{contract_id}/cancel:
    put:
      tags:
        - Contract
      summary: 契約キャンセル
      description: 指定IDの契約をキャンセル（解約）します。
      security:
        - bearerAuth: []
      operationId: cancelMyContract
      parameters:
        - name: contract_id
          in: path
          required: true
          description: 解約対象の契約ID
          schema:
            type: string
      responses:
        '200':
          description: 契約キャンセル成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResponseModel'

  /api/v1/contracts/confirm:
    post:
      tags:
        - Contract
      summary: 契約確定
      description: 申込に基づいて契約を明示的に確定・登録します。
      security:
        - bearerAuth: []
      operationId: confirmContract
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractCreateRequestModel'
      responses:
        '200':
          description: 契約作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResponseModel'

  /global_notification:
    get:
      tags:
        - Notification
      summary: 全体通知一覧取得
      responses:
        '200':
          description: 一覧取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GlobalNotification'

    post:
      tags:
        - Notification
      summary: 全体通知を作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalNotification'
      responses:
        '200':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalNotification'

  /user_notification/{user_id}:
    get:
      tags:
        - Notification
      summary: ユーザー通知の取得
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserNotification'

    post:
      tags:
        - Notification
      summary: ユーザー通知の登録
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotification'
      responses:
        '200':
          description: 登録成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotification'

    delete:
      tags:
        - Notification
      summary: ユーザー通知の削除
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 削除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /user_notification/unread/{user_id}:
    get:
      tags:
        - Notification
      summary: ユーザーの未読通知取得
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserNotification'

  /user_notification/unread_count/{user_id}:
    get:
      tags:
        - Notification
      summary: 未読通知件数の取得
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 件数取得成功
          content:
            application/json:
              schema:
                type: integer

  /user_notification/reset/{user_id}:
    delete:
      tags:
        - Notification
      summary: 既読状態のリセット
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /user_notification/read/{user_id}:
    get:
      tags:
        - Notification
      summary: 既読通知の取得
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

    post:
      tags:
        - Notification
      summary: 通知を既読にマーク
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkReadRequest'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadNotificationResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Plan:
      type: object
      properties:
        plan_id:
          type: string
          example: "pension001"
          description: 保険商品ID
        name:
          type: string
          example: "個人年金保"
          description: 保険商品名
        description:
          type: string
          example: "老後の生活資金を確保するための保険です。"
          description: 商品の説明
        image_key:
          type: string
          example: "pension001.jpg"
          description: S3上の画像キー
      required:
        - plan_id
        - name
        - description
        - image_key
    PensionQuoteRequestModel:
      type: object
      properties:
        birth_date:
          type: string
          format: date
          description: 契約者の生年月日
        gender:
          type: string
          enum: ["男", "女"]
          description: 性別
        monthly_premium:
          type: integer
          minimum: 10000
          maximum: 50000
          multipleOf: 1000
          description: 月額保険料（¥10,000〜¥50,000）
        payment_period_years:
          type: integer
          minimum: 15
          maximum: 45
          description: 払込期間（15年以上）
        tax_deduction_enabled:
          type: boolean
          description: 税制適格特約の有無
      required:
        - birth_date
        - gender
        - monthly_premium
        - payment_period_years
        - tax_deduction_enabled

    PensionQuoteResponseModel:
      type: object
      properties:
        quote_id:
          type: string
          description: 見積もりID
        contract_date:
          type: string
          format: date
          description: 契約開始日
        contract_interest_rate:
          type: number
          format: float
          description: 標準利率
        total_paid_amount:
          type: integer
          description: 払込総額
        payment_period_years:
          type: integer
          description: 払込期間
        pension_start_age:
          type: integer
          description: 年金開始年齢
        annual_tax_deduction:
          type: integer
          description: 年間最大税控除額
        scenarios:
          type: array
          items:
            $ref: "#/components/schemas/PensionQuoteScenarioModel"
      required:
        - quote_id
        - contract_date
        - contract_interest_rate
        - total_paid_amount
        - payment_period_years
        - pension_start_age
        - annual_tax_deduction
        - scenarios

    PensionQuoteScenarioModel:
      type: object
      properties:
        scenario_name:
          type: string
          description: シナリオ名（高金利、標準、最低保証）
        assumed_interest_rate:
          type: number
          format: float
          description: 想定利率
        total_refund_amount:
          type: integer
          description: 累計受取額
        annual_annuity:
          type: integer
          description: 年額年金
        lump_sum_amount:
          type: integer
          description: 一括受取額
        refund_on_15_years:
          type: integer
          description: 15年時点の返戻額
        refund_rate_on_15_years:
          type: number
          format: float
          description: 15年時点の返戻率（%）
      required:
        - scenario_name
        - assumed_interest_rate
        - total_refund_amount
        - annual_annuity
        - lump_sum_amount
        - refund_on_15_years
        - refund_rate_on_15_years

    ApplicationRequestModel:
      type: object
      properties:
        quote:
          type: object
          description: quotation_service から取得した見積もりスナップショット情報
      required:
        - quote
      example:
        quote:
          quote_id: "123e4567-e89b-12d3-a456-426614174000"
          user_id: "user-001"
          birth_date: "1990-01-01"
          gender: "male"
          monthly_premium: 20000
          payment_period_years: 30
          tax_deduction_enabled: true
          contract_date: "2025-07-01"
          contract_interest_rate: 1.2
          total_paid_amount: 7200000
          pension_start_age: 60
          annual_tax_deduction: 40000
          scenario_data:
            - scenario_name: "標準"
              assumed_interest_rate: 1.2
              total_refund_amount: 9108000
              annual_annuity: 910800
              lump_sum_amount: 9108000
              refund_on_15_years: 4554000
              refund_rate_on_15_years: 101.2

    ApplicationResponseModel:
      type: object
      properties:
        application_id:
          type: string
          description: 申込ID（UUID）
        quote_id:
          type: string
          description: 対象となった見積もりID
        status:
          type: string
          enum: [none, applied, reverted, cancelled]
          description: 現在の申込ステータス
        snapshot_birth_date:
          type: string
          format: date
        snapshot_gender:
          type: string
          enum: [male, female, other]
        snapshot_monthly_premium:
          type: integer
        snapshot_payment_period_years:
          type: integer
        snapshot_tax_deduction_enabled:
          type: boolean
        snapshot_contract_date:
          type: string
          format: date
        snapshot_contract_interest_rate:
          type: number
        snapshot_total_paid_amount:
          type: integer
        snapshot_pension_start_age:
          type: integer
        snapshot_annual_tax_deduction:
          type: integer
        scenario_data:
          type: array
          items:
            $ref: '#/components/schemas/PensionQuoteScenarioModel'
      required:
        - application_id
        - quote_id
        - status
        - snapshot_birth_date
        - snapshot_gender
        - snapshot_monthly_premium
        - snapshot_payment_period_years
        - snapshot_tax_deduction_enabled
        - snapshot_contract_date
        - snapshot_contract_interest_rate
        - snapshot_total_paid_amount
        - snapshot_pension_start_age
        - snapshot_annual_tax_deduction
        - scenario_data

    ApplicationStatusResponseModel:
      type: object
      properties:
        application_id:
          type: string
        quote_id:
          type: string
        status:
          type: string

    ContractScenarioModel:
      type: object
      description: 利率シナリオごとの契約見積もり結果
      properties:
        scenario_name:
          type: string
          description: シナリオ名（高金利、標準、最低保証など）
        assumed_interest_rate:
          type: number
          format: float
          description: 想定される予定利率（%）
        total_refund_amount:
          type: integer
          description: 累計返戻金額（最終受取額）
        annual_annuity:
          type: integer
          description: 年金形式で受け取る場合の年間受取額
        lump_sum_amount:
          type: integer
          description: 一括受取額
        refund_on_15_years:
          type: integer
          description: 15年間払込んだ場合の返戻金額
        refund_rate_on_15_years:
          type: number
          format: float
          description: 15年間払込んだ場合の返戻率（%）

    ContractCreateRequestModel:
      type: object
      required:
        - application_id
      properties:
        application_id:
          type: string
          format: uuid
          description: 契約作成対象の申込ID

    ContractUpdateModel:
      type: object
      description: 契約更新用入力モデル（部分更新可能）
      properties:
        monthly_premium:
          type: integer
          description: 月額保険料（円）
        payment_period_years:
          type: integer
          description: 払込期間（年数）
        tax_deduction_enabled:
          type: boolean
          description: 税制適格特約の有無
        contract_date:
          type: string
          format: date
          description: 契約開始日
        contract_interest_rate:
          type: number
          format: float
          description: 契約時利率（%）
        total_paid_amount:
          type: integer
          description: 総払込額（円）
        pension_start_age:
          type: integer
          description: 年金受給開始年齢
        annual_tax_deduction:
          type: integer
          description: 年間税控除額（円）
        scenarios:
          type: array
          items:
            $ref: '#/components/schemas/ContractScenarioModel'

    ContractResponseModel:
      type: object
      description: 保険契約情報の出力モデル
      properties:
        contract_id:
          type: string
          format: uuid
          description: 契約ID
        user_id:
          type: string
          format: uuid
          description: ユーザーID
        application_id:
          type: string
          format: uuid
          description: 紐づく申込ID
        quote_id:
          type: string
          format: uuid
          description: 紐づく見積もりID
        contract_status:
          type: string
          enum: [active, cancelled]
          description: 契約の状態
        user_consent:
          type: boolean
          description: ユーザー同意フラグ
        applied_at:
          type: string
          format: date-time
          description: 契約確定日時
        birth_date:
          type: string
          format: date
          description: 生年月日
        gender:
          type: string
          enum: ["男", "女"]
          description: 性別（男／女）
        monthly_premium:
          type: integer
          description: 月額保険料
        payment_period_years:
          type: integer
          description: 払込年数
        tax_deduction_enabled:
          type: boolean
          description: 税制適格特約の有無
        contract_date:
          type: string
          format: date
          description: 契約開始日
        contract_interest_rate:
          type: number
          format: float
          description: 契約時利率
        total_paid_amount:
          type: integer
          description: 総払込額
        pension_start_age:
          type: integer
          description: 年金受給開始年齢
        annual_tax_deduction:
          type: integer
          description: 年間税控除額
        scenarios:
          type: array
          items:
            $ref: '#/components/schemas/ContractScenarioModel'
        created_at:
          type: string
          format: date-time
          description: レコード作成日時
        cancelled_at:
          type: string
          format: date-time
          nullable: true
          description: キャンセル日時（キャンセルされていない場合はnull）

    QuoteStateUpdateRequest:
      type: object
      properties:
        new_state:
          type: string
          enum: [confirmed, applied, cancelled, expired]
          description: 更新後の見積もりステータス
      required:
        - new_state

    QuoteStateUpdateModel:
      type: object
      properties:
        quote_id:
          type: string
          description: 見積もりID
        from_state:
          type: string
          description: 変更前の状態
        to_state:
          type: string
          description: 変更後の状態
      required:
        - quote_id
        - from_state
        - to_state

    PartialQuoteUpdateModel:
      type: object
      description: 見積もり部分更新用の入力モデル
      properties:
        birth_date:
          type: string
          format: date
        gender:
          type: string
          enum: [male, female]
        monthly_premium:
          type: integer
          minimum: 10000
          maximum: 50000
          multipleOf: 1000
        payment_period_years:
          type: integer
          minimum: 15
          maximum: 45
        pension_payment_years:
          type: integer
          minimum: 5
          maximum: 30
        tax_deduction_enabled:
          type: boolean
    PartialApplicationUpdateModel:
      type: object
      description: 申込情報の部分更新用モデル
      properties:
        payment_method:
          type: string
          enum: [credit_card, bank_transfer]
          description: 支払方法
        identity_verified:
          type: boolean
          description: 本人確認済みフラグ
        user_consent:
          type: boolean
          description: ユーザー同意フラグ
        application_beneficiaries:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationBeneficiaryRequestModel'

    ApplicationBeneficiaryRequestModel:
      type: object
      description: 保険金受取人情報（申込入力用）
      properties:
        name:
          type: string
          description: 氏名
        relation:
          type: string
          description: 契約者との関係
        allocation:
          type: integer
          description: 割合（%）
        note:
          type: string
          description: 備考

    ApplicationStateUpdateRequest:
      type: object
      properties:
        new_state:
          type: string
          enum: [pending, under_review, confirmed, rejected, cancelled]
          description: 更新後の申込ステータス
      required:
        - new_state

    ApplicationStateUpdateResponse:
      type: object
      properties:
        application_id:
          type: string
        from_state:
          type: string
        to_state:
          type: string

    QuoteWithApplicationModel:
      type: object
      description: 見積もりと申込情報の統合モデル
      properties:
        quote:
          $ref: '#/components/schemas/PensionQuoteResponseModel'
        application:
          $ref: '#/components/schemas/ApplicationResponseModel'

    RecommendedPlanModel:
      type: object
      properties:
        plan_id:
          type: string
        name:
          type: string
        monthly_premium:
          type: integer
        category:
          type: string
        description:
          type: string
        image_url:
          type: string

    QuoteSummaryResponseModel:
      type: object
      properties:
        total_count:
          type: integer
        latest_created_at:
          type: string
          format: date-time
        draft_count:
          type: integer
        confirmed_count:
          type: integer
        applied_count:
          type: integer
        cancelled_count:
          type: integer

    ContractSummaryResponseModel:
      type: object
      properties:
        total_count:
          type: integer
        active_count:
          type: integer
        expired_count:
          type: integer
        cancelled_count:
          type: integer

    HomepageInfoResponseModel:
      type: object
      properties:
        featured_plans:
          type: array
          items:
            $ref: '#/components/schemas/FeaturedPlanModel'
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/CampaignModel'

    FeaturedPlanModel:
      type: object
      properties:
        plan_id:
          type: string
        name:
          type: string
        category:
          type: string
        description:
          type: string
        image_url:
          type: string
        monthly_premium:
          type: integer

    CampaignModel:
      type: object
      properties:
        campaign_id:
          type: string
        title:
          type: string
        description:
          type: string
        image_url:
          type: string
        valid_until:
          type: string
          format: date

    MultilingualMessage:
      type: object
      properties:
        ja:
          type: string
          nullable: true
        en:
          type: string
          nullable: true

    GlobalNotification:
      type: object
      properties:
        message_id:
          type: string
        type:
          type: string
        title:
          $ref: '#/components/schemas/MultilingualMessage'
        message_summary:
          $ref: '#/components/schemas/MultilingualMessage'
        message_detail:
          $ref: '#/components/schemas/MultilingualMessage'
        announcement_date:
          type: string
          format: date-time
        target:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true

    UserNotification:
      type: object
      properties:
        message_id:
          type: string
        user_id:
          type: string
        type:
          type: string
        title:
          $ref: '#/components/schemas/MultilingualMessage'
        message_summary:
          $ref: '#/components/schemas/MultilingualMessage'
        message_detail:
          $ref: '#/components/schemas/MultilingualMessage'
        is_important:
          type: boolean
        delivery_status:
          type: string
        delivered_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true

    ReadNotificationResponse:
      type: object
      properties:
        user_id:
          type: string
        updated_message_ids:
          type: array
          items:
            type: string
        already_read_ids:
          type: array
          items:
            type: string
        newly_marked_read:
          type: array
          items:
            type: string

    MarkReadRequest:
      type: object
      properties:
        message_ids:
          type: array
          items:
            type: string